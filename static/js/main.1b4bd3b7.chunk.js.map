{"version":3,"sources":["provider/StateProvider.js","utils/firebase.js","components/sidebarChat/SidebarChat.js","components/sidebar/Sidebar.js","assets/img/bg-wa-chat.jpg","components/chat/Chat.js","assets/img/whatsapp-logo.png","provider/authReducer.js","pages/login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["StateContext","createContext","StateProvider","children","initialState","reducer","Provider","value","useReducer","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","signWithGoogle","GoogleAuthProvider","SidebarChat","addNewChat","name","idGroup","useState","chats","setChats","useEffect","_","chatUnsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","chat","id","data","console","log","onClick","roomName","prompt","add","timestamp","FieldValue","serverTimestamp","className","Avatar","src","length","message","Sidebar","groupChat","setGroupChat","useContext","user","unsubscribe","group","photoURL","IconButton","DonutLarge","Chat","MoreVert","SearchOutlined","placeholder","type","to","inputMessage","setInputMessage","setRoomName","useParams","roomUnsubscribe","Date","toDate","toLocaleDateString","AttachFile","style","background","bgWaChat","authorEmail","email","authorName","InsertEmoticon","onSubmit","event","trim","displayName","preventDefault","onChange","target","Mic","JSON","parse","localStorage","getItem","actionTypes","Login","dispatch","whatsappLogo","alt","Button","signInWithPopup","then","result","catch","e","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","state","action","setItem","stringify","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b4bd3b7.chunk.js","sourcesContent":["import React,{createContext, useReducer} from 'react'\r\n\r\nconst StateContext = createContext()\r\n\r\nconst StateProvider = ({children, initialState, reducer})=>(\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\n\r\nexport {StateContext, StateProvider}","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCG76lY8SdZaU3_eMijX4wTsMDaDhccp48\",\r\n    authDomain: \"whatsapp-clone-bbf79.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-bbf79\",\r\n    storageBucket: \"whatsapp-clone-bbf79.appspot.com\",\r\n    messagingSenderId: \"270397991461\",\r\n    appId: \"1:270397991461:web:25298117f42464ff892dcc\"\r\n  };\r\n\r\nconst app = firebase.initializeApp(firebaseConfig)\r\n\r\nconst db = app.firestore()\r\nconst auth = app.auth()\r\nconst signWithGoogle = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport {db,auth, signWithGoogle}","import { Avatar } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { db } from '../../utils/firebase'\r\nimport './SidebarChat.css'\r\nimport firebase from 'firebase'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nfunction SidebarChat({addNewChat, name, idGroup}) {\r\n    const [chats, setChats] = useState([])\r\n\r\n    useEffect(_=>{\r\n        if(idGroup){\r\n            const chatUnsubscribe = db.collection('groups').doc(idGroup).collection('chats').orderBy('timestamp','asc').onSnapshot(snapshot=>{\r\n                setChats(snapshot.docs.map(chat=>({\r\n                    id: chat.id,\r\n                    data: chat.data()\r\n                })))\r\n                console.log(chats)\r\n            })\r\n            return ()=>{\r\n                chatUnsubscribe()\r\n            }\r\n        }\r\n    },[])\r\n\r\n    const createChat = ()=>{\r\n        const roomName = prompt(\"Please enter name for room chat\")\r\n        if(roomName){\r\n            db.collection('groups').add({\r\n                name:roomName,\r\n                timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        }\r\n    }\r\n\r\n    return !addNewChat?(\r\n        <div className=\"sidebar-chat\">\r\n            {name && <Avatar src={`https://avatars.dicebear.com/api/human/${name}.svg`} />}\r\n            <div className=\"sidebar-chat__info\">\r\n                <h2>{name}</h2>\r\n                <p>{chats.length>0 && chats[chats.length-1]?.data.message}</p>\r\n            </div>\r\n        </div>\r\n    ):(\r\n        <div onClick={createChat} className=\"sidebar-chat\">\r\n            <h2>Create new room chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import { Avatar, IconButton } from '@material-ui/core'\r\nimport { Chat, DonutLarge, MoreVert, SearchOutlined } from '@material-ui/icons'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { StateContext } from '../../provider/StateProvider'\r\nimport { db } from '../../utils/firebase'\r\nimport SidebarChat from '../sidebarChat/SidebarChat'\r\nimport './Sidebar.css'\r\n\r\nfunction Sidebar() {\r\n\r\n    const [groupChat, setGroupChat] = useState([])\r\n    const [{user}, dispatch] = useContext(StateContext)\r\n  \r\n    useEffect(()=>{\r\n        const unsubscribe = db.collection('groups').onSnapshot(snapshot=>{\r\n            setGroupChat(snapshot.docs.map(group=>({\r\n                id: group.id,\r\n                data:group.data()\r\n            })))\r\n        })\r\n\r\n        return ()=>{\r\n            unsubscribe()\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={user.photoURL} />\r\n                <div className=\"sidebar__header-right\">\r\n                    <IconButton>\r\n                        <DonutLarge />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <Chat />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__search-container\">\r\n                    <SearchOutlined className=\"sidebar__search-icon\" />\r\n                    <form>\r\n                        <input placeholder=\"Search group\" type=\"text\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__chat\">\r\n                <SidebarChat addNewChat={true} />\r\n                {\r\n                    groupChat.map(group=>(\r\n                        <Link key={group.id} to={`/groups/${group.id}`}>\r\n                            <SidebarChat name={group.data.name} idGroup={group.id} />\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export default __webpack_public_path__ + \"static/media/bg-wa-chat.7e014094.jpg\";","import { Avatar, IconButton } from '@material-ui/core'\r\nimport { AttachFile, InsertEmoticon, Mic, MoreVert, SearchOutlined } from '@material-ui/icons'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { db } from '../../utils/firebase'\r\nimport firebase from 'firebase'\r\nimport bgWaChat from '../../assets/img/bg-wa-chat.jpg'\r\nimport './Chat.css'\r\nimport { StateContext } from '../../provider/StateProvider'\r\n\r\nfunction Chat() {\r\n\r\n    const [inputMessage, setInputMessage] = useState('')\r\n    const [chats, setChats] = useState([])\r\n    const [roomName, setRoomName] = useState('')\r\n    const {id} = useParams()\r\n    const [{user}, dispatch] = useContext(StateContext)\r\n\r\n    useEffect(_=>{\r\n        const chatUnsubscribe = db.collection('groups').doc(id).collection('chats').orderBy('timestamp','asc').onSnapshot(snapshot=>{\r\n            setChats(snapshot.docs.map(chat=>({\r\n                id: chat.id,\r\n                data: chat.data()\r\n            })))\r\n        })\r\n\r\n        const roomUnsubscribe = db.collection('groups').doc(id).onSnapshot(snapshot=>{\r\n            setRoomName(snapshot.data().name)\r\n        })\r\n\r\n        return ()=>{\r\n            chatUnsubscribe()\r\n            roomUnsubscribe()\r\n        }\r\n    },[id])\r\n\r\n    const onSubmitMessageHandler = event=>{\r\n        if(inputMessage.trim()){\r\n            db.collection('groups').doc(id).collection('chats').add({\r\n                message: inputMessage,\r\n                authorName:user.displayName,\r\n                authorEmail: user.email,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n        }\r\n        setInputMessage('')\r\n        event.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${roomName}.svg`} />\r\n                <div className=\"chat__header-info\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>{chats.length>0 && new Date(chats[chats.length-1]?.data?.timestamp?.toDate()).toLocaleDateString()}</p>\r\n                </div>\r\n\r\n                <div className=\"chat__header-right\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat__body\" style={{background:bgWaChat}}>\r\n                {\r\n                    chats.map(chat=>(\r\n                        <div key={chat.id} className={`chat__message-container ${chat.data.authorEmail==user.email && 'chat__message-container-receiver'}`}>\r\n                            <div className=\"chat__message-wrapper\">\r\n                                <span className=\"chat__name\">{chat.data.authorName}</span>\r\n                                <p className=\"chat__message\">{chat.data.message}</p>\r\n                                <span className=\"chat__timestamp\">{new Date(chat.data?.timestamp?.toDate()).toLocaleDateString()}</span>\r\n                            </div>\r\n                        </div>  \r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <IconButton>\r\n                    <InsertEmoticon />\r\n                </IconButton>\r\n                <form onSubmit={onSubmitMessageHandler}>\r\n                    <input value={inputMessage} onChange={event=> setInputMessage(event.target.value)} placeholder=\"message\" type=\"text\" />\r\n                </form>\r\n                <IconButton>\r\n                    <Mic />\r\n                </IconButton>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export default __webpack_public_path__ + \"static/media/whatsapp-logo.4ba01ee1.png\";","const initialState = {\r\n    user: JSON.parse(localStorage.getItem('user'))\r\n}\r\n\r\nconst actionTypes = {\r\n    SET_USER:'SET_USER'\r\n}\r\n\r\nconst setUser = user => ({\r\n    type: actionTypes.SET_USER,\r\n    user: user\r\n})\r\n\r\nconst authReducer = (state, action)=>{\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            localStorage.setItem('user',JSON.stringify(action.user))\r\n            return ({\r\n                ...state,\r\n                user:action.user\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport {initialState, setUser, authReducer}","import React from 'react'\r\nimport './Login.css'\r\nimport whatsappLogo from '../../assets/img/whatsapp-logo.png'\r\nimport { Button } from '@material-ui/core'\r\nimport { auth, signWithGoogle } from '../../utils/firebase'\r\nimport { setUser } from '../../provider/authReducer'\r\nimport { useContext } from 'react'\r\nimport { StateContext } from '../../provider/StateProvider'\r\n\r\nfunction Login() {\r\n    const [state, dispatch] = useContext(StateContext)\r\n\r\n    const signIn = _=>{\r\n        auth.signInWithPopup(signWithGoogle).then(result=>{\r\n            console.log(result.user)\r\n            dispatch(setUser(result.user))\r\n        }).catch(e=>console.log(e))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img className=\"login__whatsapp-logo\" src={whatsappLogo} alt=\"Whatsapp Logo\" />\r\n                <h1>Sign in to whatsapp</h1>\r\n                <Button onClick={signIn}>Sign in with google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import './App.css';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Chat from './components/chat/Chat';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './pages/login/Login';\nimport { useContext } from 'react';\nimport { StateContext } from './provider/StateProvider';\n\nfunction App() {\n\n  const [{user}, dispatch] = useContext(StateContext)\n\n  return (\n    <div className=\"app\">\n      {\n        user?(\n          <div className=\"app__body\">\n            <BrowserRouter>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Sidebar />\n                </Route>\n                <Route path=\"/groups/:id\">\n                  <Sidebar />\n                  <Chat />\n                </Route>\n              </Switch>\n            </BrowserRouter>\n          </div>\n        ):(\n          <Login />\n        )\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './provider/StateProvider';\nimport { authReducer, initialState } from './provider/authReducer';\n\nReactDOM.render(\n  <StateProvider initialState={initialState} reducer={authReducer}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </StateProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}